# Functional Flow Diagram for `cpdEvaluateUStarTh4Season20100901` Function

## Start
|
|-- **Initialize Function**
|   - Define function with inputs: `t`, `NEE`, `uStar`, `T`, `fNight`, `fPlot`, `cSiteYr`
|
|-- **Initializations**
|   - Calculate `nt` as `length(t)`
|   - Use `fcDatevec(t)` to extract `y`, `m`, `d`
|   - Calculate `iYr` as `median(y)`
|   - Calculate `EndDOY` using `fcDoy(datenum(iYr,12,31.5))`
|   - Calculate `nPerDay` using `round(1/nanmedian(diff(t)))` (MATLAB stats toolbox)
|
|-- **Define Constants**
|   - Define constants:
|     - `nSeasons=4`
|     - `nStrataN=4`
|     - `nStrataX=8`
|     - `nBins=50`
|     - `nPerBin=3` (if `nPerDay=24`) or `nPerBin=5` (if `nPerDay=48`)
|   - Calculate `nPerSeasonN` as `nStrataN * nBins * nPerBin`
|   - Calculate `nN` as `nSeasons * nPerSeasonN`
|
|-- **Filter uStar Values**
|   - Identify and set invalid `uStar` values to `NaN` using `find(uStar < 0 | uStar > 3)`
|
|-- **Find Valid Data Points**
|   - Find valid indices `itAnnual` using `find(fNight == 1 & ~isnan(NEE + uStar + T))`
|   - Calculate `ntAnnual` as `length(itAnnual)`
|
|-- **Initialize Outputs**
|   - Initialize `Cp2` and `Cp3` as `NaN` arrays of size `nSeasons x nStrataX`
|   - Initialize `Stats2` and `Stats3` as structures with fields:
|     - `n`, `Cp`, `Fmax`, `p`, `b0`, `b1`, `b2`, `c2`, `cib0`, `cib1`, `cic2`, `mt`, `ti`, `tf`, `ruStarVsT`, `puStarVsT`, `mT`, `ciT` all set to `NaN`
|
|-- **Check Data Sufficiency**
|   - If `ntAnnual < nN`, return
|   - Calculate `nPerSeason` as `round(ntAnnual / nSeasons)`
|
|-- **Reorder Data for Analysis**
|   - Reorder data to move December to the beginning of the year
|   - Update `t`, `T`, `uStar`, `NEE`, `fNight` accordingly
|   - Recalculate `itAnnual` with the new order
|
|-- **Reset Seasons Based on Valid Data**
|   - Calculate `nSeasons` as `round(ntAnnual / nPerSeason)`
|   - Update `nPerSeason` as `round(ntAnnual / nSeasons)`
|
|-- **Stratify Data and Estimate Change Points**
|   - For each season `iSeason`:
|   |   - Define `jtSeason` range for the season
|   |   - Find indices `itSeason` for the current season
|   |   - Calculate `nStrata` based on data points per bin
|   |   - Adjust `nStrata` within bounds `nStrataN` and `nStrataX`
|   |   - Calculate temperature thresholds `TTh` using `prctile`
|   |
|   |-- **Process Each Temperature Stratum**
|   |   - For each stratum `iStrata`:
|   |   |   - Identify `itStrata` within temperature range
|   |   |   - Bin `uStar` and `NEE` using `fcBin`
|   |   |   - Call `cpdFindChangePoint20100901(muStar, mNEE, fPlot, cPlot)`
|   |   |   - Calculate additional statistics: `mt`, `ti`, `tf`, `ruStarVsT`, `puStarVsT`, `mT`, `ciT`
|   |   |   - Assign results to `Cp2(iSeason, iStrata)`, `Stats2(iSeason, iStrata)`, `Cp3(iSeason, iStrata)`, `Stats3(iSeason, iStrata)`
|
|-- **End**
|   - Return `Cp2`, `Stats2`, `Cp3`, `Stats3`
